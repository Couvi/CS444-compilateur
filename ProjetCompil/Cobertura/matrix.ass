; ----------------------------------------------------------------------
; -----------                      Programme généré par JCasc-----------
; ----------------------------------------------------------------------
   TSTO #102 
   BOV stackoverflow 
   ADDSP #102 
; ----------------------------Pour Ligne :5-----------------------------
   TSTO #1 
   BOV stackoverflow 
   ADDSP #1 
   LOAD #1, R0 
   STORE R0, 101(LB) 
   LOAD #10, R0 
   STORE R0, 103(LB) 
boucle.1: 
; --------------------------Ecriture Ligne :6---------------------------
   WSTR "[" 
; ------------------------Fin Ecriture Ligne :6-------------------------
; ----------------------------Pour Ligne :7-----------------------------
   TSTO #1 
   BOV stackoverflow 
   ADDSP #1 
   LOAD #1, R0 
   STORE R0, 102(LB) 
   LOAD #10, R0 
   STORE R0, 104(LB) 
boucle.2: 
; --------------------------Ecriture Ligne :8---------------------------
   LOAD #1, R1 
   SUB #1, R1 
   LOAD #101, R3 
   LOAD 0(GB, R3), R3 
   CMP #1, R3 
   BLT indexoutofbound 
   CMP #10, R3 
   BGT indexoutofbound 
   MUL #10, R3 
   ADD R3, R1 
   SUB #1, R1 
   LOAD #102, R3 
   LOAD 0(GB, R3), R3 
   CMP #1, R3 
   BLT indexoutofbound 
   CMP #10, R3 
   BGT indexoutofbound 
   ADD R3, R1 
   LOAD 0(GB, R1), R1 
   WINT 
; ------------------------Fin Ecriture Ligne :8-------------------------
; --------------------------Ecriture Ligne :9---------------------------
   WSTR " " 
; ------------------------Fin Ecriture Ligne :9-------------------------
   LOAD 102(LB), R0 
   ADD #1, R0 
   STORE R0, 102(LB) 
   CMP 104(GB), R0 
   BLE boucle.2 
   SUBSP #1 
; --------------------------Fin Pour Ligne :7---------------------------
; --------------------------Ecriture Ligne :11--------------------------
   WSTR "]" 
; ------------------------Fin Ecriture Ligne :11------------------------
; --------------------------newline Ligne :12---------------------------
   WNL 
; ------------------------Fin newline Ligne :12-------------------------
   LOAD 101(LB), R0 
   ADD #1, R0 
   STORE R0, 101(LB) 
   CMP 103(GB), R0 
   BLE boucle.1 
   SUBSP #1 
; --------------------------Fin Pour Ligne :5---------------------------
   HALT 
intervaloutofbound: 
   WSTR "ERREUR Interval Out Of Bound" 
   HALT 
stackoverflow: 
   WSTR "ERREUR Stack Overflow" 
   HALT 
